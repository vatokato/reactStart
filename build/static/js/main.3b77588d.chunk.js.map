{"version":3,"sources":["components/Article.js","components/News.js","components/Add.js","App.js","serviceWorker.js","index.js"],"names":["Article","state","visible","handleReadMoreClick","e","preventDefault","_this","setState","_this$props$data","this","props","data","id","author","text","bigText","react_default","a","createElement","className","href","onClick","React","Component","News","renderNews","newsTemplate","length","map","item","index","components_Article","key","Add","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlerSubmit","_this$state","name","onAddNews","Date","validate","_this$state2","agree","trim","handleChange","_e$target","target","value","defineProperty","handlerCheckbox","currentTarget","checked","_this$state3","onSubmit","type","placeholder","onChange","disabled","App","componentDidMount","fetch","then","response","json","news","filteredNews","isLoading","catch","error","console","log","message","handleAddNews","newNews","concat","toConsumableArray","Fragment","components_Add","Array","isArray","News_News","nextFilteredNews","forEach","toLowerCase","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oQA4CeA,oNAvCbC,MAAQ,CACNC,SAAS,KAGXC,oBAAsB,SAACC,GACpBA,EAAGC,iBACJC,EAAKC,SAAS,CAACL,SAAQ,6EAGhB,IAAAM,EAC+BC,KAAKC,MAAMC,KAAzCC,EADDJ,EACCI,GAAIC,EADLL,EACKK,OAAQC,EADbN,EACaM,KAAMC,EADnBP,EACmBO,QAClBb,EAAYO,KAAKR,MAAjBC,QAER,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBN,EAA7B,KACAG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcL,IAExBZ,GAAWc,EAAAC,EAAAC,cAAA,KAAGE,KAAM,QAAQR,EAAIS,QAASZ,KAAKN,oBAAqBgB,UAAU,kBAAlE,0DAIZjB,GAAWc,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBJ,WAvB7BO,IAAMC,YCAtBC,6MAEJC,WAAa,WAAM,IACVd,EAASL,EAAKI,MAAdC,KAEHe,EAAeV,EAAAC,EAAAC,cAAA,+IAQnB,OAPGP,EAAKgB,OAAO,IACbD,EAAef,EAAKiB,IAAI,SAASC,EAAMC,GACrC,OACEd,EAAAC,EAAAC,cAACa,EAAD,CAASC,IAAKH,EAAKjB,GAAID,KAAMkB,OAI5BH,2EAGA,IACAf,EAASF,KAAKC,MAAdC,KAEP,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZV,KAAKgB,cAGNd,EAAKgB,OAAO,EAAEX,EAAAC,EAAAC,cAAA,kGAAyBP,EAAKgB,QAAiB,aA1BpDL,IAAMC,kBC8FVU,cA9Fb,SAAAA,EAAYvB,GAAO,IAAAJ,EAAA,OAAA4B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAwB,IACjB3B,EAAA4B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7B,KAAMC,KAUR6B,cAAgB,SAACnC,GACfA,EAAEC,iBADkB,IAAAmC,EAEUlC,EAAKL,MAA5BwC,EAFaD,EAEbC,KAAM3B,EAFO0B,EAEP1B,KAAMC,EAFCyB,EAEDzB,QACnBT,EAAKI,MAAMgC,UAAU,CACnB9B,IAAK,IAAI+B,KACT9B,OAAQ4B,EACR3B,OACAC,aAlBeT,EAsBnBsC,SAAS,WAAM,IAAAC,EAC0BvC,EAAKL,MAApCwC,EADKI,EACLJ,KAAM3B,EADD+B,EACC/B,KAAMC,EADP8B,EACO9B,QAAS+B,EADhBD,EACgBC,MAC7B,SAAIL,EAAKM,QAAUjC,EAAKiC,QAAUhC,EAAQgC,QAAUD,IAxBnCxC,EA8BnB0C,aAAe,SAAC5C,GAAM,IAAA6C,EACA7C,EAAE8C,OAAftC,EADaqC,EACbrC,GAAIuC,EADSF,EACTE,MACX7C,EAAKC,SAAL2B,OAAAkB,EAAA,EAAAlB,CAAA,GACGtB,EAAKuC,KAjCS7C,EAqCnB+C,gBAAkB,SAACjD,GACjBE,EAAKC,SAAS,CACZuC,MAAO1C,EAAEkD,cAAcC,WApCzBjD,EAAKL,MAAQ,CACXwC,KAAK,GACL3B,KAAK,GACLC,QAAQ,GACR+B,OAAO,GAPQxC,qHA6CV,IAAAkD,EAC8B/C,KAAKR,MAAnCwC,EADAe,EACAf,KAAM3B,EADN0C,EACM1C,KAAMC,EADZyC,EACYzC,QAAS+B,EADrBU,EACqBV,MAE5B,OACE9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAMsC,SAAUhD,KAAK8B,eACnCvB,EAAAC,EAAAC,cAAA,SACEN,GAAG,OACH8C,KAAK,OACLP,MAAOV,EACPtB,UAAU,cACVwC,YAAY,8CACZC,SAAUnD,KAAKuC,eAEjBhC,EAAAC,EAAAC,cAAA,YACEN,GAAG,OACHO,UAAU,YACVgC,MAAOrC,EACP6C,YAAY,uCACZC,SAAUnD,KAAKuC,eAEjBhC,EAAAC,EAAAC,cAAA,YACEN,GAAG,UACHO,UAAU,eACVgC,MAAOpC,EACP4C,YAAY,iHACZC,SAAUnD,KAAKuC,eAEjBhC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,SACEwC,KAAK,WACLE,SAAUnD,KAAK4C,gBACfE,QAAST,IAJb,0HAOA9B,EAAAC,EAAAC,cAAA,UACE2C,UAAWpD,KAAKmC,WAChBzB,UAAU,YAFZ,uGAhFUG,IAAMC,WC0DTuC,cAtDb,SAAAA,EAAYpD,GAAO,IAAAJ,EAAA,OAAA4B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAqD,IACjBxD,EAAA4B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAA4B,GAAAxB,KAAA7B,KAAMC,KAORqD,kBAAoB,WAClBC,MAAM,4CACHC,KAAK,SAACC,GAAD,OAAYA,EAASC,SAC1BF,KAAK,SAACtD,GACLL,EAAKC,SAAS,CACZ6D,KAAMzD,EACN0D,aAAa,KACbC,WAAU,MAGbC,MAAM,SAASC,GACdC,QAAQC,IAAIF,EAAMG,YAnBLrE,EAoCnBsE,cAAgB,SAACjE,GACf,IAAMkE,EAAO,CAAIlE,GAAJmE,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAa5B,EAAKL,MAAMmE,OACrC9D,EAAKC,SAAS,CAAC6D,KAAMS,KApCrBvE,EAAKL,MAAQ,CACXmE,KAAM,KACNE,WAAW,GAJIhE,wEAyCV,IAAAkC,EACiC/B,KAAKR,MAAtCmE,EADA5B,EACA4B,KAAMC,EADN7B,EACM6B,aAAcC,EADpB9B,EACoB8B,UAC3B,OACEtD,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,SAAP,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,CAAKvC,UAAWjC,KAAKmE,gBACpBN,GAAatD,EAAAC,EAAAC,cAAA,gEACbgE,MAAMC,QAAQf,IAASpD,EAAAC,EAAAC,cAACkE,EAAD,CAAMzE,KAAM0D,wDAxBV3D,EAAOT,GACrC,IAAIiF,MAAMC,QAAQlF,EAAMmE,MAAO,OAAO,KACtC,IAAIiB,EAAgBnD,OAAA6C,EAAA,EAAA7C,CAAOjC,EAAMmE,MAMjC,OALAiB,EAAiBC,QAAQ,SAACzD,EAAMC,IACsB,IAAhDD,EAAKd,QAAQwE,cAAcC,QAAQ,UACrC3D,EAAKd,QAAU,8BAGZ,CACLsD,aAAcgB,UAjCF/D,IAAMC,WCMJkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpC,KAAK,SAAAqC,GACjCA,EAAaC","file":"static/js/main.3b77588d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Article extends React.Component {\n  state = {\n    visible: false, // определили начальное состояние\n  }\n\n  handleReadMoreClick = (e) => {\n    (e).preventDefault();\n    this.setState({visible:true});\n  }\n\n  render() {\n    const { id, author, text, bigText } = this.props.data;\n    const { visible } = this.state;\n\n    return (\n      <div className=\"news__article\">\n        <p className=\"news__author\">{author}:</p>\n        <p className=\"news__text\">{text}</p>\n        {\n          !visible && <a href={\"#new-\"+id} onClick={this.handleReadMoreClick} className='news__readmore'>Подробнее</a>\n        }\n\n        {\n          visible && <p className=\"news__bigText\">{bigText}</p>\n\n        }\n      </div>\n    );\n  }\n}\n\nArticle.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    author: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    bigText: PropTypes.string.isRequired\n  })\n}\n\nexport default Article;\n","import React from 'react';\nimport './News.scss';\nimport Article from \"./Article\";\n\nclass News extends React.Component {\n\n  renderNews = () => {\n    const {data } = this.props;\n\n    let newsTemplate = <p>К сожалению, новостей нет</p>;\n    if(data.length>0) {\n      newsTemplate = data.map(function(item, index) {\n        return (\n          <Article key={item.id} data={item}/>\n        )\n      });\n    }\n    return newsTemplate;\n  }\n\n  render() {\n    const {data } = this.props;\n\n    return (\n      <div className=\"news\">\n        <h3>Новости</h3>\n        <div className=\"news__list\">\n          {this.renderNews()}\n        </div>\n        {\n          data.length>0?<strong>Всего новостей: {data.length}</strong>:null\n        }\n      </div>\n    )\n  }\n}\nexport {News};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name:'',\r\n      text:'',\r\n      bigText:'',\r\n      agree: false\r\n    }\r\n  }\r\n\r\n  handlerSubmit = (e)=> {\r\n    e.preventDefault();\r\n    const {name, text, bigText} = this.state;\r\n    this.props.onAddNews({\r\n      id: +new Date(),\r\n      author: name,\r\n      text,\r\n      bigText\r\n    });\r\n  }\r\n\r\n  validate=() => {\r\n    const { name, text, bigText, agree } = this.state;\r\n    if (name.trim() && text.trim() && bigText.trim() && agree) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const {id, value} = e.target;\r\n    this.setState({\r\n      [id]: value\r\n    });\r\n  }\r\n\r\n  handlerCheckbox = (e) => {\r\n    this.setState({\r\n      agree: e.currentTarget.checked\r\n    });\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const {name, text, bigText, agree} = this.state;\r\n\r\n    return (\r\n      <form className=\"add\" onSubmit={this.handlerSubmit}>\r\n        <input\r\n          id='name'\r\n          type='text'\r\n          value={name}\r\n          className='add__author'\r\n          placeholder='Ваше имя'\r\n          onChange={this.handleChange}\r\n        />\r\n        <textarea\r\n          id='text'\r\n          className='add__text'\r\n          value={text}\r\n          placeholder='Кратко'\r\n          onChange={this.handleChange}\r\n        />\r\n        <textarea\r\n          id='bigText'\r\n          className='add__bigText'\r\n          value={bigText}\r\n          placeholder='Полный текст новости'\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className='add__checkrule'>\r\n          <input\r\n            type='checkbox'\r\n            onChange={this.handlerCheckbox}\r\n            checked={agree}\r\n          /> Я согласен с правилами\r\n        </label>\r\n        <button\r\n          disabled={!this.validate()}\r\n          className='add__btn'>\r\n          Добавить новость\r\n        </button>\r\n      </form>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nAdd.propTypes = {\r\n  onAddNews: PropTypes.func.isRequired, // func используется для проверки передачи function\r\n}\r\n\r\nexport default Add;\r\n","import React from 'react';\nimport {News} from \"./components/News\";\nimport Add from \"./components/Add\";\n\n//import myNews from \"../public/data/newsData\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      news: null,\n      isLoading: true\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('http://localhost:3000/data/newsData.json')\n      .then((response)=>response.json())\n      .then((data)=>{\n        this.setState({\n          news: data,\n          filteredNews:null,\n          isLoading:false\n        });\n      })\n      .catch(function(error) {\n        console.log(error.message);\n      });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if(!Array.isArray(state.news)) return null;\n    let nextFilteredNews = [...state.news];\n    nextFilteredNews.forEach((item, index) => {\n      if (item.bigText.toLowerCase().indexOf('pubg') !== -1) {\n        item.bigText = 'СПАМ';\n      }\n    });\n    return {\n      filteredNews: nextFilteredNews,\n    }\n  }\n\n  handleAddNews = (data) => {\n    const newNews = [data, ...this.state.news];\n    this.setState({news: newNews});\n  }\n\n  render() {\n    const {news, filteredNews, isLoading} = this.state;\n    return (\n      <React.Fragment>\n        <Add onAddNews={this.handleAddNews}/>\n        {isLoading && <p>Загружаю...</p>}\n        {Array.isArray(news) && <News data={filteredNews} />}\n      </React.Fragment>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}